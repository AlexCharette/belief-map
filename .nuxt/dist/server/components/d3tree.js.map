{"version":3,"file":"components/d3tree.js","sources":["webpack:///./components/DonutChart.vue?b162","webpack:///./components/DonutChart.vue?23d2","webpack:///./components/DonutChart.vue?5bd6","webpack:///./components/DonutChart.vue?65af","webpack:///./components/DonutChart.vue","webpack:///./components/DonutChart.vue?08e1","webpack:///./components/DonutChart.vue?f7f8","webpack:///./components/BeliefNode.vue?cffb","webpack:///./components/BeliefNode.vue?ab6d","webpack:///./components/BeliefNode.vue?7b66","webpack:///./components/BeliefNode.vue","webpack:///./components/D3Tree.vue?d121","webpack:///./components/D3Tree.vue?943d","webpack:///./components/D3Tree.vue?669c","webpack:///./components/D3Tree.vue?44e6","webpack:///./components/D3Tree.vue?1161","webpack:///./components/D3Tree.vue?4a04","webpack:///./components/D3Tree.vue"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./DonutChart.vue?vue&type=style&index=0&lang=scss&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"94a7572e\", content, false, context)\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return ((_vm.hasSegments && _vm.numSegments > 1))?_c('svg',{key:_vm.index,on:{\"click\":_vm.onClick}},[_vm._ssrNode(\"<defs>\",\"</defs>\",[_vm._ssrNode(\"<filter\"+(_vm._ssrAttr(\"id\",((_vm.node.id) + \"-path-shadow\")))+\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"200%\\\" height=\\\"200%\\\">\",\"</filter>\",[_c('feOffset',{attrs:{\"result\":\"offOut\",\"in\":\"SourceGraphic\",\"dx\":\"10\",\"dy\":\"10\"}}),_vm._ssrNode(\" \"),_c('feColorMatrix',{attrs:{\"result\":\"matrixOut\",\"in\":\"offOut\",\"type\":\"matrix\",\"values\":\"0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0\"}}),_vm._ssrNode(\" \"),_c('feGaussianBlur',{attrs:{\"result\":\"blurOut\",\"in\":\"matrixOut\",\"stdDeviation\":\"10\"}}),_vm._ssrNode(\" \"),_c('feBlend',{attrs:{\"in\":\"SourceGraphic\",\"in2\":\"blurOut\",\"mode\":\"normal\"}})],2)]),_vm._ssrNode(\" <circle fill=\\\"white\\\"\"+(_vm._ssrAttr(\"cx\",_vm.circleData.x))+(_vm._ssrAttr(\"cy\",_vm.circleData.y))+(_vm._ssrAttr(\"r\",_vm.circleData.radius))+(_vm._ssrAttr(\"stroke\",_vm.getHexColour(this.segments[0].colour)))+(_vm._ssrAttr(\"stroke-width\",1))+(_vm._ssrAttr(\"filter\",(\"url(#\" + (_vm.node.id) + \"-path-shadow)\")))+\" class=\\\"clickable\\\"></circle> <circle fill=\\\"white\\\"\"+(_vm._ssrAttr(\"cx\",_vm.circleData.x))+(_vm._ssrAttr(\"cy\",_vm.circleData.y))+(_vm._ssrAttr(\"r\",_vm.circleData.radius / 3))+(_vm._ssrAttr(\"stroke\",_vm.getHexColour(this.typeColour)))+(_vm._ssrAttr(\"stroke-width\",2))+\" class=\\\"clickable\\\"></circle> \"+(_vm._ssrList((_vm.segments),function(segment,loopIndex){return (\"<path fill=\\\"white\\\"\"+(_vm._ssrAttr(\"stroke\",_vm.getHexColour(segment.colour)))+(_vm._ssrAttr(\"stroke-width\",(_vm.strokeWidth + (segment.count * 3))))+(_vm._ssrAttr(\"d\",_vm.describeArc(_vm.circleData.x, _vm.circleData.y, _vm.circleData.radius, _vm.arcPoints[loopIndex][0], _vm.arcPoints[loopIndex][1])))+\"></path>\")})))],2):((_vm.hasSegments && _vm.numSegments == 1))?_c('svg',{key:_vm.index,on:{\"click\":_vm.onClick}},[_vm._ssrNode(\"<defs>\",\"</defs>\",[_vm._ssrNode(\"<filter\"+(_vm._ssrAttr(\"id\",((_vm.node.id) + \"-shadow\")))+\" x=\\\"-35%\\\" y=\\\"-35%\\\" width=\\\"200%\\\" height=\\\"200%\\\">\",\"</filter>\",[_c('feOffset',{attrs:{\"result\":\"offOut\",\"in\":\"SourceGraphic\",\"dx\":\"5\",\"dy\":\"7\"}}),_vm._ssrNode(\" \"),_c('feColorMatrix',{attrs:{\"result\":\"matrixOut\",\"in\":\"offOut\",\"type\":\"matrix\",\"values\":\"0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.5 0\"}}),_vm._ssrNode(\" \"),_c('feGaussianBlur',{attrs:{\"result\":\"blurOut\",\"in\":\"matrixOut\",\"stdDeviation\":\"10\"}}),_vm._ssrNode(\" \"),_c('feBlend',{attrs:{\"in\":\"SourceGraphic\",\"in2\":\"blurOut\",\"mode\":\"normal\"}})],2)]),_vm._ssrNode(\" <circle fill=\\\"white\\\"\"+(_vm._ssrAttr(\"cx\",_vm.circleData.x))+(_vm._ssrAttr(\"cy\",_vm.circleData.y))+(_vm._ssrAttr(\"r\",_vm.circleData.radius / 3))+(_vm._ssrAttr(\"stroke\",_vm.getHexColour(this.typeColour)))+(_vm._ssrAttr(\"stroke-width\",2))+\" class=\\\"clickable\\\"></circle> <circle fill=\\\"white\\\"\"+(_vm._ssrAttr(\"cx\",_vm.circleData.x))+(_vm._ssrAttr(\"cy\",_vm.circleData.y))+(_vm._ssrAttr(\"r\",_vm.circleData.radius))+(_vm._ssrAttr(\"stroke\",_vm.getHexColour(this.segments[0].colour)))+(_vm._ssrAttr(\"stroke-width\",_vm.strokeWidth))+(_vm._ssrAttr(\"filter\",(\"url(#\" + (_vm.node.id) + \"-shadow)\")))+\" class=\\\"clickable\\\"></circle>\")],2):_c('svg',{key:_vm.index,on:{\"click\":_vm.onClick}},[_vm._ssrNode(\"<defs>\",\"</defs>\",[_vm._ssrNode(\"<filter\"+(_vm._ssrAttr(\"id\",((_vm.node.id) + \"-shadow\")))+\" x=\\\"-35%\\\" y=\\\"-35%\\\" width=\\\"200%\\\" height=\\\"200%\\\">\",\"</filter>\",[_c('feOffset',{attrs:{\"result\":\"offOut\",\"in\":\"SourceGraphic\",\"dx\":\"5\",\"dy\":\"7\"}}),_vm._ssrNode(\" \"),_c('feColorMatrix',{attrs:{\"result\":\"matrixOut\",\"in\":\"offOut\",\"type\":\"matrix\",\"values\":\"0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.5 0\"}}),_vm._ssrNode(\" \"),_c('feGaussianBlur',{attrs:{\"result\":\"blurOut\",\"in\":\"matrixOut\",\"stdDeviation\":\"10\"}}),_vm._ssrNode(\" \"),_c('feBlend',{attrs:{\"in\":\"SourceGraphic\",\"in2\":\"blurOut\",\"mode\":\"normal\"}})],2)]),_vm._ssrNode(\" <circle fill=\\\"white\\\"\"+(_vm._ssrAttr(\"cx\",_vm.circleData.x))+(_vm._ssrAttr(\"cy\",_vm.circleData.y))+(_vm._ssrAttr(\"r\",_vm.circleData.radius))+(_vm._ssrAttr(\"stroke\",_vm.getHexColour(this.typeColour)))+(_vm._ssrAttr(\"stroke-width\",_vm.strokeWidth))+(_vm._ssrAttr(\"filter\",(\"url(#\" + (_vm.node.id) + \"-shadow)\")))+\" class=\\\"clickable\\\"></circle>\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\n\nconst colourMap: any = {\n  'light-green darken-1': '#7CB342',\n  'green darken-1': '#43A047',\n  'light-blue darken-1': '#039BE5',\n  'blue darken-1': '#1E88E5',\n  'indigo darken-1': '#3949AB',\n  'deep-purple darken-1': '#5E35B1',\n  'amber darken-1': '#FFB300',\n  'orange darken-1': '#FB8C00',\n  'red darken-1': '#E53935',\n  'light-green darken-3': '#558B2F',\n  'green darken-3': '#2E7D32',\n  'blue darken-3': '#2979FF',\n  'indigo darken-3': '#283593',\n  'deep-purple darken-3': '#4527A0',\n  'amber darken-3': '#FF8F00',\n  'orange darken-3': '#EF6C00',\n  'red darken-3': '#C62828',\n}\n\nexport default Vue.extend({\n  name: 'DonutChart',\n  props: ['index', 'node', 'segments', 'typeColour', 'circleData'],\n  data() {\n    return {\n      numSegments: this.segments.length,\n      strokeWidth: 15 as number,\n    }\n  },\n  computed: {\n    hasSegments(): boolean {\n      return this.segments !== undefined && this.segments.length > 0\n    },\n    // svgSize(): number {\n    //   const circleData = this.circleData as CircleData\n    //   return circleData.x * 2\n    // },\n    arcSize(): number {\n      const size = 360 / this.segments.length\n      return size\n    },\n    arcPoints(): [number, number][] {\n      let arcs = [] as [number, number][];\n      for (let i = 0; i < this.segments.length; i++) {\n        const start = i * this.arcSize\n        arcs.push([start, start + this.arcSize])\n      }\n      return arcs\n    }\n  },\n  methods: {\n    onClick(event: any) {\n      this.$store.commit('nodes/set', this.node)\n      this.$store.commit('display/setDisplayBeliefDetails', true)\n    },\n    getHexColour(name: string) {\n      return colourMap[name]\n      // switch (name) {\n      //   case 'light-green darken-1':\n      //     return '#7CB342'\n      //   case 'green darken-1':\n      //     return '#43A047'\n      //   case 'light-blue darken-1':\n      //     return '#039BE5'\n      //   case 'blue darken-1': \n      //     return '#1E88E5'\n      //   case 'indigo darken-1': \n      //     return '#3949AB'\n      //   case 'deep-purple darken-1': \n      //     return '#5E35B1'\n      //   case 'amber darken-1': \n      //     return '#FFB300'\n      //   case 'orange darken-1': \n      //     return '##FB8C00'\n      //   case 'red darken-1': \n      //     return '#E53935'\n      //   case 'light-green darken-3':\n      //     return '#558B2F'\n      //   case 'green darken-3':\n      //     return '#2E7D32'\n      //   case 'blue darken-3': \n      //     return '#2979FF'\n      //   case 'indigo darken-3': \n      //     return '#283593'\n      //   case 'deep-purple darken-3': \n      //     return '#4527A0'\n      //   case 'amber darken-3': \n      //     return '#FF8F00'\n      //   case 'orange darken-3': \n      //     return '#EF6C00'\n      //   case 'red darken-3': \n      //     return '#C62828'\n      //   default:\n      //     return '#FFFFFF'\n      // }\n    },\n    // CODE TAKEN FROM https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\n    describeArc(x: number , y: number , radius: number , startAngle: number , endAngle: number) {\n      const start = this.polarToCartesian(x, y, radius, endAngle);\n      const end = this.polarToCartesian(x, y, radius, startAngle);\n\n      const largeArcFlag = (endAngle - startAngle <= 180) ? \"0\" : \"1\";\n\n      const d = [\n          \"M\", start.x, start.y, \n          \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\n      ].join(\" \");\n\n      return d;       \n    },\n    polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number) {\n      const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n      return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n      };\n    },\n    // END OF TAKEN CODE\n  },\n})\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./DonutChart.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./DonutChart.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./DonutChart.vue?vue&type=template&id=123db654&\"\nimport script from \"./DonutChart.vue?vue&type=script&lang=ts&\"\nexport * from \"./DonutChart.vue?vue&type=script&lang=ts&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./DonutChart.vue?vue&type=style&index=0&lang=scss&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"17f94b3e\"\n  \n)\n\nexport default component.exports","export * from \"-!../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./DonutChart.vue?vue&type=style&index=0&lang=scss&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".clickable:hover{cursor:pointer}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{on:{\"mouseenter\":function($event){_vm.isInflated = true},\"mouseleave\":function($event){_vm.isInflated = false}}},[_c('donut-chart',{key:_vm.index,attrs:{\"index\":_vm.index,\"node\":_vm.fullNode,\"segments\":_vm.segments,\"typeColour\":_vm.getTypeColour(this.type),\"circleData\":_vm.circleData}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport { CircleData, Node, Segment } from '~/belief-map.types'\nimport DonutChart from '~/components/DonutChart.vue'\n\ninterface IObjectKeys {\n  [key: string]: number,\n}\n\ninterface TypeCount extends IObjectKeys {\n  scientificEvidence: number,\n  observation: number,\n  personalConclusion: number,\n  personalAssumption: number,\n  religiousThinking: number,\n  statedByAuthority: number,\n  unableToDisprove: number, \n}\n\n      // switch(type) {\n      //   case BeliefType.ScientificEvidence:\n      //     return 'light-green darken-1'\n      //   case BeliefType.Observation:\n      //     return 'light-blue darken-1'\n      //   case BeliefType.PersonalConclusion:\n      //     return 'indigo darken-1'\n      //   case BeliefType.PersonalAssumption:\n      //     return 'deep-purple darken-1'\n      //   case BeliefType.ReligiousThinking:\n      //     return 'amber darken-1'\n      //   case BeliefType.StatedByAuthority:\n      //     return 'orange darken-1'\n      //   case BeliefType.UnableToDisprove:\n      //     return 'red darken-1'\n      //   default: \n      //     return 'white'\n      // }\n\nconst typeColourMap: any = {\n  'scientificEvidence': 'light-green darken-1',\n  'observation': 'light-blue darken-1',\n  'personalConclusion': 'indigo darken-1',\n  'personalAssumption': 'deep-purple darken-1',\n  'religiousThinking': 'amber darken-1',\n  'statedByAuthority': 'orange darken-1',\n  'unableToDisprove': 'red darken-1',\n}\n\nexport default Vue.extend({\n  name: 'BeliefNode',\n  components: {\n    DonutChart,\n  },\n  props: ['index', 'node', 'shapeData'],\n  data() {\n    return {\n      id: this.node.id,\n      name: this.node.name,\n      notes: this.node.notes,\n      references: this.node.references,\n      type: this.node.type,\n      numTypes: 0 as number,\n      isInflated: false,\n    }\n  },\n  computed: {\n    fullNode(): Node {\n      return {\n        id: this.node.id,\n        name: this.node.name,\n        notes: this.node.notes,\n        references: this.node.references,\n        type: this.node.type,\n        children: this.hasChildren ? this.node.children : [],\n      } as Node\n    },  \n    hasChildren(): boolean {\n      return this.node.children !== undefined && this.node.children.length > 0\n    },\n    circleData(): CircleData {\n      const x = this.shapeData.x\n      const y = this.shapeData.y\n      const radius = this.isInflated ? this.shapeData.size / 2 : this.shapeData.size / 3\n      return {\n        x,\n        y,\n        radius,\n      } as CircleData\n    },\n    segments(): Segment[] {\n      const self = this\n      let segments = [] as Segment[]\n      if (this.hasChildren) {\n        // console.log(this.node.children)\n        const typeCount = this.childrenTypeCount\n        Object.entries(typeCount).forEach((entry: [string, any]) => {\n          if (entry[1] > 0) {\n            // Create a new segment object\n            const segment = {\n              type: entry[0],\n              count: entry[1],\n              colour: self.getTypeColour(entry[0]),\n            } as Segment\n            segments.push(segment)\n          }\n        })\n      }\n      return segments\n    },\n    childrenTypeCount(): any {\n      if (!this.hasChildren) return 0\n      let typeCount = {\n        scientificEvidence: 0,\n        observation: 0,\n        personalConclusion: 0,\n        personalAssumption: 0,\n        religiousThinking: 0,\n        statedByAuthority: 0,\n        unableToDisprove: 0,\n      } as TypeCount\n      this.node.children.forEach((child: any) => {\n        const type = child.type as string\n        typeCount[type]++ \n      })\n      return typeCount\n    },\n  },\n  methods: {\n    getTypeColour(type: string) {\n      return typeColourMap[type]\n      // switch(type) {\n      //   case BeliefType.ScientificEvidence:\n      //     return 'light-green darken-1'\n      //   case BeliefType.Observation:\n      //     return 'light-blue darken-1'\n      //   case BeliefType.PersonalConclusion:\n      //     return 'indigo darken-1'\n      //   case BeliefType.PersonalAssumption:\n      //     return 'deep-purple darken-1'\n      //   case BeliefType.ReligiousThinking:\n      //     return 'amber darken-1'\n      //   case BeliefType.StatedByAuthority:\n      //     return 'orange darken-1'\n      //   case BeliefType.UnableToDisprove:\n      //     return 'red darken-1'\n      //   default: \n      //     return 'white'\n      // }\n    }\n  },\n  // created() {\n  //   if (this.children === undefined) {\n  //     this.hasChildren = false\n  //   }\n  // },\n  mounted() {\n    // console.log(this.node)\n    this.numTypes = Object.keys(this.childrenTypeCount).length // TODO revise\n  }\n})\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./BeliefNode.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./BeliefNode.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./BeliefNode.vue?vue&type=template&id=34572da8&scoped=true&\"\nimport script from \"./BeliefNode.vue?vue&type=script&lang=ts&\"\nexport * from \"./BeliefNode.vue?vue&type=script&lang=ts&\"\nfunction injectStyles (context) {\n  \n  \n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"34572da8\",\n  \"091cdc48\"\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {DonutChart: require('/home/acharette/repos/web/worldview_map/components/DonutChart.vue').default})\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./D3Tree.vue?vue&type=style&index=0&lang=scss&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"457bffea\", content, false, context)\n};","export * from \"-!../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--7-oneOf-1-3!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./D3Tree.vue?vue&type=style&index=0&lang=scss&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#tree-container,#tree-container #belief-map{position:relative}#tree-container #belief-map .link{stroke-width:2px!important;fill:transparent!important;stroke:#757575!important}#tree-container #node-container{z-index:1}#tree-container #belief-map,#tree-container #node-container,#tree-container svg{width:100%;height:100%;position:absolute;left:0;top:0;overflow:visible;transform-origin:0 50%}#tree-container .node{position:absolute;box-sizing:border-box;transform:translate(-50%,-50%);display:flex;align-items:center;justify-content:center;box-sizing:content-box;transition:all .8s;transition-timing-function:ease-in-out}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"container\",attrs:{\"id\":\"tree-container\"}},[_vm._ssrNode(\"<svg id=\\\"belief-map\\\"\"+(_vm._ssrStyle(null,_vm.initialTransformStyle, null))+\"></svg> \"),_vm._ssrNode(\"<div id=\\\"node-container\\\"\"+(_vm._ssrStyle(null,_vm.initialTransformStyle, null))+\">\",\"</div>\",_vm._l((_vm.nodes),function(node,index){return _c('belief-node',{key:node.id,staticClass:\"node\",style:(_vm.nodeStyle(node)),attrs:{\"index\":index,\"node\":node.data,\"shapeData\":{ x: node.x, y: node.y, size: _vm.nodeWidth }}})}),1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport * as uuid from 'uuid'\nimport * as d3 from 'd3'\nimport BeliefNode from '~/components/BeliefNode.vue'\n\nconst NODE_WIDTH = 75\nconst NODE_HEIGHT = 75\nconst HEIGHT_LEVEL = 225\n\nexport default Vue.extend({\n  name: 'D3Tree',\n  components: {\n    BeliefNode,\n  },\n  data() {\n    return {\n      nodeWidth: NODE_WIDTH as number,\n      nodeHeight: NODE_HEIGHT as number,\n      heightLevel: HEIGHT_LEVEL as number,\n      links: [] as any[],\n      nodes: [] as any[],\n      currentNode: null as any, // OLD\n      duration: 250,\n      newNode: null as unknown, // OLD\n      root: null as any,\n      svg: null as any,\n      initTransformData: {\n        x: 0 as number,\n        y: 0 as number,\n      } as any,\n      unsubscribe: null as any,\n    }\n  },\n  computed: {\n    dataset(): any {\n      return this.$store.state.data.tree\n    },\n    initialTransformStyle(): Object {\n      return {\n        transform: `scale(1) translate(${this.initTransformData.x}px, ${this.initTransformData.y}px)`,\n        transformOrigin: 'center',\n      }\n    },\n  },\n  methods: {\n    nodeStyle(node: any) {\n      return node.data.isRoot\n        ? {\n            left: this.formatDimension(node.x + this.nodeWidth / 2),\n            top: this.formatDimension(node.y + this.nodeHeight / 2),\n            width: this.formatDimension(this.nodeWidth),\n            height: this.formatDimension(this.nodeHeight),\n          }\n        : {\n            left: this.formatDimension(this.nodeWidth / 2),\n            top: this.formatDimension(this.nodeHeight / 2),\n            width: this.formatDimension(this.nodeWidth),\n            height: this.formatDimension(this.nodeHeight),\n          }\n    },\n    deleteNode() {\n      let self = this\n\n      if (\n        this.currentNode.parent &&\n        this.currentNode.parent.children.length > 0\n      ) {\n        this.currentNode.parent.children.filter((node: any, index: number) => {\n          if (node.id && node.id == self.currentNode.id) {\n            self.currentNode.parent.children.splice(index, 1)\n            if (self.currentNode.parent.children.length === 0) {\n              delete self.currentNode.parent.children\n            }\n            self.update(self.currentNode)\n          }\n        })\n      }\n    },\n    formatDimension(dimension: any) {\n      if (typeof dimension === 'number') return `${dimension}px`\n      if (dimension.indexOf('px') !== -1) {\n        return dimension\n      } else {\n        return `${dimension}px`\n      }\n    },\n    addUniqueKey(root: any) {\n      // TODO this is modifiying state data which is no bueno\n      const queue = [root]\n      while (queue.length !== 0) {\n        const node = queue.pop()\n        if (node === undefined) {\n          console.log('Node is undefined')\n          return\n        }\n        node.id = uuid.v4()\n        if (node.children) {\n          queue.push(...node.children)\n        }\n      }\n      return root\n    },\n    initTransform() {\n      const containerWidth = (this.$refs.container as any).offsetWidth\n      const containerHeight = (this.$refs.container as any).offsetHeight\n      this.initTransformData.x = Math.floor(containerWidth / 2)\n      this.initTransformData.y = Math.floor(NODE_HEIGHT)\n    },\n    buildTree(root: any) {\n      const treeBuilder = d3.tree().nodeSize([NODE_WIDTH * 2, HEIGHT_LEVEL]) // TODO [nodeWidth, levelHeight]\n      const tree = treeBuilder(d3.hierarchy(root))\n      return [tree.descendants(), tree.links()]\n    },\n    update(source: any) {\n      const self = this\n\n      const [nodes, links] = this.buildTree(source)\n      this.links = links\n\n      this.svg = d3.select('#belief-map')\n\n      const linkObjects = this.svg.selectAll('.link').data(links, (d: any) => {\n        return `${d.source.data.id}-${d.target.data.id}`\n      })\n\n      // Enter any new links at the parent's previous position.\n      linkObjects\n        .enter()\n        .append('path')\n        .style('opacity', 0)\n        .transition()\n        .duration(this.duration)\n        .ease(d3.easeCubicInOut)\n        .style('opacity', 1)\n        .attr('class', 'link')\n        .attr('d', (d: any) => {\n          return self.diagonal(d)\n        })\n      // Transition back to the parent element position\n      linkObjects\n        .transition()\n        .duration(self.duration)\n        .ease(d3.easeCubicInOut)\n        .attr('d', (d: any) => {\n          return self.diagonal(d)\n        })\n      // Remove any exiting links\n      linkObjects\n        .exit()\n        .transition()\n        .duration(self.duration)\n        .ease(d3.easeCubicInOut)\n        .style('opacity', 0)\n        .remove()\n\n      this.nodes = nodes\n    },\n    diagonal(d: any) {\n      const linkPath = d3.linkVertical()\n      // let source = { x: d.source.x, y: d.source.y };\n      // let target = { x: d.target.x, y: d.target.y };\n      linkPath\n        .x((d: any) => {\n          return d.x\n        })\n        .y((d: any) => {\n          return d.y\n        })\n        .source((d: any) => {\n          return d.source\n        })\n        .target((d: any) => {\n          return d.target\n        })\n      return linkPath(d)\n    },\n    onClick(node: any) {\n      this.currentNode = node\n      if (node.children) {\n        node._children = node.children\n        node.children = null\n      } else {\n        node.children = node._children\n        node._children = null\n      }\n      this.update(node)\n    },\n  },\n  watch: {\n    dataset(newData: any, oldData: any) {\n      // this.addUniqueKey(this.dataSet)\n      this.root = this.dataset\n\n      this.update(this.root)\n      this.initTransform()\n    },\n  },\n  created() {\n    const self = this\n\n    this.unsubscribe = this.$store.subscribe((mutation: any, state: any) => {\n      if (mutation.type === 'data/deleteNode' || mutation.type === 'data/addNode') {\n        self.update(state.data.tree)\n      }\n    })\n  },\n  mounted() {\n    this.duration = 250\n\n    this.root = this.dataset\n\n    this.update(this.root)\n    this.initTransform()\n  },\n  beforeDestroy() {\n    this.unsubscribe()\n  },\n})\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./D3Tree.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./D3Tree.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./D3Tree.vue?vue&type=template&id=58f6a95d&\"\nimport script from \"./D3Tree.vue?vue&type=script&lang=ts&\"\nexport * from \"./D3Tree.vue?vue&type=script&lang=ts&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./D3Tree.vue?vue&type=style&index=0&lang=scss&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"66930f12\"\n  \n)\n\nexport default component.exports\n\n/* nuxt-component-imports */\ninstallComponents(component, {BeliefNode: require('/home/acharette/repos/web/worldview_map/components/BeliefNode.vue').default})\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA;AACA;AACA;;;;;;;;;AC4GA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AApBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AArEA;AA9BA;;ACpIA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AAAA;AAAA;AAAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;;;;;;;;;;;;ACgBA;AAEA;AAitBA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/GA;;ACjEA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AAAA;AAAA;AAAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;;;;;;;;;;;;;;;;;;ACkBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAfA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAVA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAUA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAQA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA/IA;AAgJA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AARA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAhNA;;AC7BA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}